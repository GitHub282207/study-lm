       body{
            background-color: #78e08f;
            margin: 0;
            /* position: relative; */
        }
        /* 装有两个ball的盒子，方便定位实现位置 */
        .container{
            
            height: 100px;
            width: 232px;
            position: absolute;/*绝对定位*/
            left: 50%;
            top: 50%;
            transform: translate(-50%,-50%);/*移动*/
            font-size: 0;/*解决行内块级元素的占位不够分行问题*/
        }
        .ball{
            width: 100px;
            height: 100px;
            border-radius: 50%;/*实现正方形变成圆行bdrs大于等于50%*/
            border: 8px solid #000;
            background-color: #fff;
            position: relative;/*为下面face,eyes,mouth做父容器，实现定位*/
            display: inline-block;
            /* float: left; */
        }
        .face{
            width: 70px;
            height: 30px;
            position: absolute;/*相对于ball做绝对定位*/
            right: 0;
            top: 30px;
        }
        .face::before{/*伪类（每个元素只能用两个），可以不写标签，自动归为开闭标签前后*/
            content: "";
            width: 18px;
            height: 8px;
            border-radius: 50%;
            background-color: #badc58;
            position: absolute;/*相对于face定位*/
            right: -8px;
            top: 20px;
        }
        .face::after{
            content: "";
            width: 18px;
            height: 8px;
            border-radius: 50%;
            background-color: #badc58;
            position: absolute;
            left: -5px;
            top: 20px;
        }
        .eye{
            width: 15px;
            height: 14px;
            border-radius: 50%;
            border-bottom: 5px solid #000;
            position: absolute;
        }
        .eye-l{
            left: 10px;
        }
        .eye-r{
            right: 5px;
        }
        .mouth{
            width: 30px;
            height: 14px;
            border-radius: 50%;
            border-bottom: 5px solid #000;
            position: absolute;
            left: 0;
            right: 0;
            bottom: -5px;
            transform: translate(3px);
            margin: 0 auto;/*左右居中，与lefe 0,right 0配合使用*/
        }
        #l-ball{/*为左边这个表情设置动画效果*/
            animation: close 4s ease infinite ;/* ease 平滑 infinite 无限循环*/
            z-index: 2;/*实现层级效果，谁在前谁在后，默认值为0，右边ball要在后面才亲*/
        }
        @keyframes close {
            0% {transform: translate(0);}
            20%{ transform: translate(20px);}
            35%{ transform: translate(20px);}
            55%{ transform: translate(0px);}
            100%{ transform: translate(0px);}
        }
        .face-l{/*蹭的效果 脸绕X轴转*/
            animation: face 4s ease infinite;
        }
        @keyframes face{
            0% {transform: translate(0) rotate(0);}
            10% {transform: translate(0) rotate(0);}
            20% {transform: translate(5px) rotate(-2deg);}
            28% {transform: translate(0) rotate(0);}
            35% {transform: translate(5px) rotate(-2deg);}
            50% {transform: translate(0) rotate(0);}
            100% {transform: translate(0) rotate(0);}
        }
        .face-r{
            left: 0;
            top: 37px;
        }
        .face::before{
            width: 10px;
            height: 10px;
            right: -4px;
            
        }
        .face::after{
            width: 10px;
            height: 10px;
            left: 5px;
        }
        .eye-r-p{/*实现眼睛向上*/
            border-top: 5px solid #000;
            border-bottom: 0 ;
        }
        .kiss-m{
            position: absolute;
            left: 20px;
            top: 22px;
            opacity: 0;/*透明度为0，表示先让它消失*/
            animation: kiss-m 4s ease infinite;/*添加动画*/
        }
        .kiss{
            width: 13px;
            height: 10px;
            border-radius: 50%;
            border-left: 5px solid #000;/*kiss的上下嘴唇用椭圆的左边框实现*/
        }
        #r-ball{
            animation: kiss 4s ease infinite;
        }
        @keyframes kiss{
            40% {transform: translate(0);}
            50% {transform: translate(30px) rotateZ(20deg);}
            60% {transform: translate(-33px);}
            67% {transform: translate(-33);}
            77% {transform: translate(0);}
        }
        .mouth-r{/*更改透明度控制两个嘴唇交替出现的效果动画*/
            animation: mouth-m 4s ease infinite;
        }
        @keyframes mouth-m{
            0%{ opacity: 1;}
            54.9% {opacity: 1;}
            55% {opacity: 0;}
            66% {opacity: 0;}
            66.1% {opacity: 1;}
        }
        @keyframes kiss-m{
            0% { opacity: 0;}
            55% {opacity: 0;}
            55.1% {opacity: 1;}
            66% {opacity: 1;}
            66.1% {opacity: 0;}
        }

        